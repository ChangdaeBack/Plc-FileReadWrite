<?xml version="1.0" encoding="utf-8"?>
<TcPlcObject Version="1.1.0.1" ProductVersion="3.1.4024.6">
  <POU Name="FB_FileGenerator" Id="{85727ddd-c2c9-46b1-8055-f03bc04251c8}" SpecialFunc="None">
    <Declaration><![CDATA[FUNCTION_BLOCK FB_FileGenerator
VAR_INPUT
	sFileName : STRING(70);
	sSelectedDirectory : STRING(170);
	sSomethingToWrite : STRING(1024);
	bExecute : BOOL;
END_VAR

VAR_OUTPUT
	bError : BOOL;
	nErrorID : UDINT;
END_VAR

VAR
	fbFileOpen : FB_FileOpen :=(nMode := FOPEN_MODEWRITE, ePath := PATH_GENERIC);
	fbFileWrite : FB_FileWrite;
	fbFileClose : FB_FileClose;
	rTrigExecute : R_TRIG;
	sErrorState : STRING;
	eState : (Init, FileOpening, FileWriting, FileClosing, Error);
	
END_VAR]]></Declaration>
    <Implementation>
      <ST><![CDATA[rTrigExecute(CLK:=bExecute);

CASE eState OF
	Init:
		fbFileOpen(bExecute := FALSE);	
	    fbFileWrite(bExecute := FALSE);
	    fbFileClose(bExecute := FALSE);
		nErrorID := 0;
		bError := FALSE;
		
		IF rTrigExecute.Q THEN
			eState := FileOpening;
		END_IF
	
	FileOpening:
		fbFileOpen(bExecute := TRUE,
					sPathName := CONCAT(GetDirectoryPath(sSelectedDirectory),sFileName));
		IF fbFileOpen.bError THEN
			nErrorID := fbFileOpen.nErrId;
			eState := Error;	
			sErrorState := 'FileOpening';
		ELSIF NOT fbFileOpen.bBusy THEN
			fbFileOpen(bExecute := FALSE);
			eState := FileWriting;
		END_IF
		
	FileWriting:
		fbFileWrite(bExecute := TRUE,
					hFile:= fbFileOpen.hFile,
					pWriteBuff:=ADR(sSomethingToWrite),
					cbWriteLen := SIZEOF(sSomethingToWrite));
		IF fbFileWrite.bError THEN
			eState := Error;
			nErrorID := fbFileWrite.nErrId;
			sErrorState := 'FileWriting';
		ELSIF NOT fbFileWrite.bBusy THEN
			fbFileWrite(bExecute := FALSE);
			eState := FileClosing;
		END_IF
	
	FileClosing:
		fbFileClose(bExecute := TRUE,
					hFile := fbFileOpen.hFile);
		IF fbFileClose.bError THEN
			nErrorID := fbFileClose.nErrId;
			eState := Error;
			sErrorState := 'FileClosing';	
		ELSIF NOT fbFileClose.bBusy THEN
			eState := Init;
		END_IF
	
	Error:
		bError := TRUE;
		IF rTrigExecute.Q THEN
			eState := Init;
		END_IF
END_CASE]]></ST>
    </Implementation>
    <Method Name="GetDirectoryPath" Id="{002ffafc-2f01-479b-b9bf-bf27b4d1991d}">
      <Declaration><![CDATA[METHOD PRIVATE GetDirectoryPath : STRING
VAR_INPUT
	sSelectedDirectroy : STRING(170);
END_VAR
VAR
	
END_VAR
VAR CONSTANT
	sCdrive : STRING(3) := 'C:\';
	sSlash : STRING(1) := '/';
END_VAR]]></Declaration>
      <Implementation>
        <ST><![CDATA[GetDirectoryPath := CONCAT(sCdrive, sSelectedDirectroy);
GetDirectoryPath := CONCAT(GetDirectoryPath, sSlash);

(* Return: C:\xxx/ *)]]></ST>
      </Implementation>
    </Method>
  </POU>
</TcPlcObject>